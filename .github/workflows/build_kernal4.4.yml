name: Build Kernal4.4 Padavan

on:
  workflow_dispatch:
    inputs:
      target:
        type: choice
        description: 'target to compile'
        options:
        - K2P
        - RM2100
        - K2P-USB
        - CR660x
        - JCG-Q20
        - JCG-AC860M
        - JCG-AC876M
        - JCG-Y2
        - DIR-878
        - DIR-882
        - MR2600
        - MI-R3P
        - XY-C1
      plugins:
        description: 'json format string of include configs'
        required: true
        default: '{"vpnsvr":"n","vpncli":"n","vpncmd":"n","ss":"y","v2ray":"n","xray":"y","trojan":"n","ssobfs":"n","dnsforwarder":"n","adbyby":"n","adguardhome":"n","aliddns":"n","zerotier":"n","ddnsto":"n","wireguard":"n","aldriver":"n","mentohust":"n","scutclient":"n","njitclient":"n","minieap":"n","dogcom":"n"}'
      firmwarever:
        description: 'firmware''s version'
        required: true
        default: '20220122'
      uploadcow:
        type: boolean
        description: 'whether to upload firmware to cowtransfer'
        default: 'true'
env:
  REPOSITORY_URL: https://github.com/MeIsReallyBa/padavan-4.4.git
  TOOLCHAIN_URL: https://github.com/hanwckf/padavan-toolchain/releases/download/linux-4.4-v1.0/mipsel-linux-uclibc.tar.xz
  WORK_PATH: /opt/padavan-4.4
  TIME_ZONE: Asia/Shanghai
  FIRMWARE_DATEPREFIX: $(date +"%Y%m%d")
  FIRMWARE_AUTHOR: MeIsReallyBa
  FIRMWARE_PATH: /opt/firmwares
jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd \
        fakeroot kmod cpio git python3-docutils gettext automake autopoint \
        texinfo build-essential help2man pkg-config zlib1g-dev libgmp3-dev \
        libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget libc-dev-bin
        sudo timedatectl set-timezone "$TIME_ZONE"
    - name: Parse json string of include plugins
      run: |
        plugins = ${{fromJson(github.event.inputs.plugins)}}
        echo "vpnsvr=$plugins.vpnsvr" >> $GITHUB_ENV
